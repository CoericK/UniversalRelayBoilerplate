{"version":3,"sources":["../../../units/urb-base-server/log.js"],"names":["require","load","transports","process","env","NODE_ENV","push","Console","defaultPersisterLogger","createLogger","log","Logger"],"mappings":";;AAEA,kC;;AAEA,8F;;AAEA;AACAA,QAAS,QAAT,EAAoBC,IAApB;;AAEA;AACA,MAAMC,aAAa,EAAnB;;AAEA;AACA,IAAKC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6CH,WAAWI,IAAX,CAAiB,IAAI,kBAAQJ,UAAR,CAAmBK,OAAvB,EAAjB;;AAE7C;AACA,MAAMC,yBAAyB,2BAAiBC,YAAjB,EAA/B;AACA,IAAKD,sBAAL,EAA8BN,WAAWI,IAAX,CAAiBE,sBAAjB;;AAE9B;AACA,MAAME,MAAM,IAAI,kBAAQC,MAAZ,CAAmB,EAAET,UAAF,EAAnB,CAAZ,C;;AAEeQ,G","file":"log.js","sourcesContent":["// @flow\n\nimport winston from 'winston'\n\nimport defaultPersister from '../_configuration/urb-base-server/graphql/defaultPersister'\n\n// Read environment\nrequire( 'dotenv' ).load()\n\n// Determine transports.\nconst transports = []\n\n// Add console when not in production mode.\nif ( process.env.NODE_ENV !== 'production' ) transports.push( new winston.transports.Console() )\n\n// If persister specified logger, use it\nconst defaultPersisterLogger = defaultPersister.createLogger()\nif ( defaultPersisterLogger ) transports.push( defaultPersisterLogger )\n\n// Create winston\nconst log = new winston.Logger({ transports })\n\nexport default log\n"]}