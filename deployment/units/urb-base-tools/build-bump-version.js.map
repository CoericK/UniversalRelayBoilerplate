{"version":3,"sources":["../../../units/urb-base-tools/build-bump-version.js"],"names":["require","load","console","log","process","env","npm_package_version","arrVersion","split","versionBuildNumber","newVersion","fileName","searchString","newContentOfLine","fileLines","readFileSync","index","length","indexOf","writeFileSync","join"],"mappings":"aAAA,wB;;AAEA,uD;;AAEA;AACAA,QAAS,QAAT,EAAoBC,IAApB;;AAEAC,QAAQC,GAAR,CAAa,sCAAsCC,QAAQC,GAAR,CAAYC,mBAA/D;AACAJ,QAAQC,GAAR,CAAa,sDAAb;;AAEA,MAAMI,aAAa,iBAAQC,KAAR,CAAe,GAAf,CAAnB;AACA,IAAIC,qBAAqBF,WAAW,CAAX,CAAzB;;AAEA,IAAKE,sBAAsB,IAA3B,EAAkCA,qBAAqB,CAAC,CAAtB;;AAElC,IAAKL,QAAQC,GAAR,CAAYC,mBAAZ,IAAmCC,WAAW,CAAX,IAAgB,GAAhB,GAAsBA,WAAW,CAAX,CAAtB,GAAsC,GAAtC,GAA4CA,WAAW,CAAX,CAApF;AACEE,qBAAqB,CAAC,CAAtB;;AAEF;AACAA;AACA,MAAMC,aAAaN,QAAQC,GAAR,CAAYC,mBAAZ,GAAkC,GAAlC,GAAwCG,kBAA3D;;AAEA,MAAME,WAAW,mCAAjB;AACA,MAAMC,eAAe,yBAArB;AACA,MAAMC,mBAAmB,8BAA8BH,UAA9B,GAA2C,IAApE;;AAEA,IAAII,YAAY,aAAGC,YAAH,CAAiBJ,QAAjB,EAA2B,MAA3B,EAAoCH,KAApC,CAA2C,IAA3C,CAAhB;AACA,IAAIQ,QAAQ,CAAZ;;AAEA,OAAQA,QAAQF,UAAUG,MAA1B,EAAmC;AACjC,MAAKH,UAAUE,KAAV,EAAiBE,OAAjB,CAA0BN,YAA1B,IAA2C,CAAC,CAAjD,EAAqD;AACnD,QAAKE,UAAUE,KAAV,MAAqBH,gBAA1B;AACEX,YAAQC,GAAR,CAAa,MAAMQ,QAAN,GAAiB,yBAA9B,EADF;AAEK;AACHG,gBAAUE,KAAV,IAAmBH,gBAAnB;AACA,mBAAGM,aAAH,CAAkBR,QAAlB,EAA4BG,UAAUM,IAAV,CAAgB,IAAhB,CAA5B;;AAEAlB,cAAQC,GAAR,CAAa,sCAAsCO,UAAnD;AACD;AACD;AACD,GAVD,MAUOM;AACR","file":"build-bump-version.js","sourcesContent":["import fs from 'fs'\n\nimport { version } from '../_configuration/package.js'\n\n// Read environment\nrequire( 'dotenv' ).load()\n\nconsole.log( 'Current version in package.json: ' + process.env.npm_package_version )\nconsole.log( 'Current version in package.js:   ' + version )\n\nconst arrVersion = version.split( '.' )\nlet versionBuildNumber = arrVersion[3]\n\nif ( versionBuildNumber == null ) versionBuildNumber = -1\n\nif ( process.env.npm_package_version != arrVersion[0] + '.' + arrVersion[1] + '.' + arrVersion[2])\n  versionBuildNumber = -1\n\n// Increment build\nversionBuildNumber++\nconst newVersion = process.env.npm_package_version + '.' + versionBuildNumber\n\nconst fileName = './units/_configuration/package.js'\nconst searchString = 'export const version = '\nconst newContentOfLine = 'export const version = \\'' + newVersion + '\\''\n\nlet fileLines = fs.readFileSync( fileName, 'utf8' ).split( '\\n' )\nlet index = 0\n\nwhile ( index < fileLines.length ) {\n  if ( fileLines[index].indexOf( searchString ) > -1 ) {\n    if ( fileLines[index] === newContentOfLine )\n      console.log( '[' + fileName + '] is already up to date' )\n    else {\n      fileLines[index] = newContentOfLine\n      fs.writeFileSync( fileName, fileLines.join( '\\n' ) )\n\n      console.log( 'New version in package.js:       ' + newVersion )\n    }\n    break\n  } else index++\n}\n"]}