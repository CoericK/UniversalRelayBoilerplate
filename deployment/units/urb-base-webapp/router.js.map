{"version":3,"sources":["../../../units/urb-base-webapp/router.jsx"],"names":["createResolver","historyMiddlewares","fetcher","environment","network","create","args","fetch","store","routeConfig","length"],"mappings":";;;;;;;;;;;;;;;;AAgBgBA,c,GAAAA,c,CAdhB,4D,iEACA,4D,iEACA,wC,6CACA,yCACA,8B,6CACA,yCACA,6CAEA,sE,mDACA,kF,+DACA,0E,oJAEO,MAAMC,kDAAqB,2BAA3B,CAEA,SAASD,cAAT,CAAyBE,OAAzB,EAAwC;AAC7C,QAAMC,cAAc,8BAAgB;AAClCC,aAAS,sBAAQC,MAAR,CAAgB,CAAE,GAAGC,IAAL,KAAeJ,QAAQK,KAAR,CAAe,GAAGD,IAAlB,CAA/B,CADyB;AAElCE,WAAO,wBAAW,gCAAX,CAF2B,EAAhB,CAApB;;;AAKA,SAAO,yBAAcL,WAAd,CAAP;AACD;;AAEM,MAAMM,oCAAc;AACzB,iDAAO,MAAK,GAAZ;AACE;AACE,YAAK,GADP;AAEE,mCAFF;AAGE,2FAHF,6BADF;;;;;;;;;;AAcG,uBAAWC,MAAX,GAAoB,CAApB,wBAdH,CADyB,CAApB","file":"router.js","sourcesContent":["// @flow\n\nimport queryMiddleware from 'farce/lib/queryMiddleware'\nimport makeRouteConfig from 'found/lib/makeRouteConfig'\nimport Route from 'found/lib/Route'\nimport { Resolver } from 'found-relay'\nimport React from 'react'\nimport { graphql } from 'react-relay'\nimport { Environment, Network, RecordSource, Store } from 'relay-runtime'\n\nimport AppFrame from '../_configuration/urb-base-webapp/AppFrame'\nimport routesAppFrame from '../_configuration/urb-base-webapp/routesAppFrame'\nimport routesRoot from '../_configuration/urb-base-webapp/routesRoot'\n\nexport const historyMiddlewares = [ queryMiddleware ]\n\nexport function createResolver( fetcher: any ) {\n  const environment = new Environment({\n    network: Network.create( ( ...args ) => fetcher.fetch( ...args ) ),\n    store: new Store( new RecordSource() ),\n  })\n\n  return new Resolver( environment )\n}\n\nexport const routeConfig = makeRouteConfig(\n  <Route path=\"/\">\n    <Route\n      path=\"/\"\n      Component={AppFrame}\n      query={graphql`\n        query router_AppFrame_Query {\n          Viewer {\n            ...AppFrame_Viewer\n          }\n        }\n      `}\n    >\n      {routesAppFrame}\n    </Route>\n    {routesRoot.length > 0 && routesRoot}\n  </Route>,\n)\n"]}