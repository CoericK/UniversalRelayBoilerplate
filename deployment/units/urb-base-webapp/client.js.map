{"version":3,"sources":["../../../units/urb-base-webapp/client.js"],"names":["render","fetcher","window","__RELAY_PAYLOADS__","data","Viewer","UserToken2","resolver","Router","historyProtocol","historyMiddlewares","routeConfig","hydrate","__siteConfiguration__","document","getElementById"],"mappings":";;;AAGA;;AAEA,4D;AACA,8E;AACA,sD;AACA,8B;AACA,qC;;AAEA,4F;AACA,0E;;AAEA,gD;AACA;;;AAGA,wD;;AAEA,MAAMA,SAAS,4BAAa,EAAb;;AAEf;AAFA,C,CAHA;AAfA;AAqBC,CAAE,YAAW,CACZ;AACA,QAAMC,UAAU,4BACd,oCADc;AAEdC,SAAOC,kBAFO;AAGdD,SAAOC,kBAAP,CAA0B,CAA1B,EAA6BC,IAA7B,CAAkCC,MAAlC,CAAyCC,UAH3B,CAAhB;;AAKA,QAAMC,WAAW,4BAAgBN,OAAhB,CAAjB;;AAEA,QAAMO,SAAS,MAAM,wCAAyB;AAC5CC,qBAAiB,+BAD2B;AAE5CC,kDAF4C;AAG5CC,oCAH4C;AAI5CJ,YAJ4C;AAK5CP,UAL4C,EAAzB,CAArB;;;AAQA;AACA,qBAASY,OAAT;AACE,wDAAY,mBAAmBV,OAAOW,qBAAtC;AACE,kCAAC,MAAD,IAAQ,UAAUN,QAAlB,GADF,CADF;;AAIEO,WAASC,cAAT,CAAyB,MAAzB,CAJF;AAKE,QAAM;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAbH;;AAeD,CAjCA","file":"client.js","sourcesContent":["// @flow\n\n// In order to use ES7 async/await\nimport 'babel-polyfill'\n\nimport BrowserProtocol from 'farce/lib/BrowserProtocol'\nimport createInitialFarceRouter from 'found/lib/createInitialFarceRouter'\nimport createRender from 'found/lib/createRender'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport getGraphQLServerURL from '../_configuration/urb-base-webapp/getGraphQLServerURL'\nimport AppWrapper from '../_configuration/urb-base-webapp/AppWrapper'\n\nimport FetcherClient from './fetcherClient'\nimport { createResolver, historyMiddlewares, routeConfig } from './router'\n\n// Include global CSS used in all units. Will not be chunked\nimport '../_configuration/urb-base-webapp/global.css'\n\nconst render = createRender({})\n\n//\n;( async() => {\n  // eslint-disable-next-line no-underscore-dangle\n  const fetcher = new FetcherClient(\n    getGraphQLServerURL(),\n    window.__RELAY_PAYLOADS__,\n    window.__RELAY_PAYLOADS__[0].data.Viewer.UserToken2, // It is critical that the app frame has UserToken2 retrieved\n  )\n  const resolver = createResolver( fetcher )\n\n  const Router = await createInitialFarceRouter({\n    historyProtocol: new BrowserProtocol(),\n    historyMiddlewares,\n    routeConfig,\n    resolver,\n    render,\n  })\n\n  // $FlowIssue for reason unknow flow does not see ReactDOM.hydrate.\n  ReactDOM.hydrate(\n    <AppWrapper siteConfiguration={window.__siteConfiguration__}>\n      <Router resolver={resolver} />\n    </AppWrapper>,\n    document.getElementById( 'root' ),\n    () => {\n      // TODO x0100 Research if removal of styles if necessary\n      // Previous version of react required removing of JSS styles but the new one seems to handle\n      // them OK.\n      // // We don't need the static css any more once we have launched our application.\n      // const ssStyles = document.getElementById( 'server-side-styles' )\n      // // $FlowIssue it is guaranteed to be there\n      // ssStyles.parentNode.removeChild( ssStyles )\n    },\n  )\n})()\n"]}